channel clock
channel w,r : { -1..10}


--
P1 = (clock -> clock -> r ! 1-> P1) [] SKIP

Q1 =  (clock -> w ? x -> w ? x -> clock -> Q1) [] SKIP

-- Q2 =  (clock -> w ? x -> clock -> Q1) [] SKIP



-- P = (clock -> clock -> clock -> clock -> r ! 1 -> clock -> clock -> r ! 1 -> P1) [] SKIP
-- Q = (clock -> clock -> clock -> clock -> clock -> w ? x -> clock -> Q1) [] SKIP





Read = clock -> ((r ? x -> (r ? x -> STOP [] Write(x))
                    [] clock -> Read) [] SKIP)

Writes(x) = w ! x -> ((Writes(x) [] Read) [] SKIP)
Write(x) = clock -> (Writes(x) [] Read) [] SKIP



SYSTEM =
            (
                    -- (
                        (
                            Q1 [{| clock, w |} || {| clock, r, w |}] Write(-1)
                        )
                        [{| clock, w, r |} || {| clock, r |}]
                        P1
                --     )
                -- [{| clock, w, r |} || {| clock, w |}]
                -- Q2
            )
            [|{| clock |}|]
            (
                Clock(1)
            )



Clock(n) =  if n == 6 then SKIP else clock -> clock -> Clock(n+1)

assert SKIP [F= SYSTEM \ Events
assert SYSTEM :[deadlock free [F]]
