channel counter : { 0..10}
channel src_r, src_w : { -1..10}
channel clock


Pixel1 = (clock -> counter ? x -> clock -> src_r ! 1 -> Pixel1) [] SKIP
        -- if (x == 1)
        -- then (clock -> src_r ! x -> Pixel1)
        -- else clock -> Pixel1

-- Pixel2 = clock ->
--     counter ? x ->
--         if (x == 1)
--         then (clock -> src_r ! x -> Pixel2)
--         else clock -> Pixel2


Src = (clock -> src_w ? x -> clock -> Src) [] SKIP

Buf_src_w(x) = clock -> src_w ! x -> Buf_src_r(x) [] SKIP
Buf_src_r(x) = clock -> (src_r ? x -> Buf_src_w(x) [] SKIP)

Clock(n) = if n == 10 then SKIP else clock -> clock -> Clock(n+1)



System =
        (
            (
                -- (
                    (
                        Pixel1 [{| clock, src_r, counter |} || {| clock, src_r, src_w |}] Buf_src_w(-1)
                    )
                    -- [{| clock, src_r, src_w, counter |} || {| clock, src_r, counter |}] Pixel2
                -- )
                [{| clock, src_r, src_w |} || {| clock, src_w |}] Src
            )
            [{| clock, src_r, src_w |} || {| clock |}] Clock(0)
        )



-- Monitor = clock -> src_w ? x -> clock -> Monitor

assert SKIP [F= System \ Events
assert System :[deadlock free [F]]

