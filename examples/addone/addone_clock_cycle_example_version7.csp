channel clock
channel d_r, c_r : { -1..5}
channel d_w, c_w : { -1..5}

Add(i) =
    (clock -> d_w ? x ->
            if (x == -1)
            then (clock ->
                if (i+1) > 5
                then STOP
                else (c_r ! (i+1) -> Add(i)))
            else (clock ->
                if (x+1) > 5
                then STOP
                else (c_r ! (x+1) -> Add(i)))
    )
    [] SKIP


Id(i) =
    (clock -> c_w ? x ->
            if (x == -1)
            then (clock ->
                if i > 5
                then STOP
                else (d_r ! i -> Id(i)))
            else (clock ->
                if x > 5
                then STOP
                else (d_r ! x -> Id(i)))
    )
    [] SKIP

Clock(n) =  if n == 10 then SKIP else clock -> clock -> Clock(n+1)


Buf_dw(x) = clock -> d_w ! x -> Buf_dr(x) [] SKIP
Buf_dr(x) = clock -> (d_r ? x -> Buf_dw(x) [] SKIP)

Buf_cw(x) = clock -> c_w ! x -> Buf_cr(x) [] SKIP
Buf_cr(x) = clock -> (c_r ? x -> Buf_cw(x) [] SKIP)

System = (
           (
             Add(0) [{| clock, c_r, d_w |} || {| clock, d_r, d_w |}] Buf_dw(-1)
           )
           [{| clock, c_r, d_r, d_w |} || {| clock, c_r, c_w, d_r |}]
           (
             Id(0) [{| clock, c_w, d_r |} || {| clock, c_r, c_w |}] Buf_cw(-1)
           )
         ) [|{| clock |}|] (
           Clock(1)
         )

assert SKIP [F= System \ Events
assert System :[deadlock free [F]]