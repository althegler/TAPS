proc traffic_A (in src_in, in traffic_b)
    bus traffic_a {val: u5 range 1 to 4;};
    var state: u5 = 0 range 0 to 4;
    var init: bool = false range false to true;
    var current: u5 range 1 to 4;
{
    if (init == true) {
        current = traffic_b.val;
    } else {
         current = src_in.val;
         if (current == 1) {
             init = true;
         }
    }
    if (current == 1) {
        state = 4;
        traffic_a.val = 4;
    } elif (current == 2) {
         state = 1;
         traffic_a.val = 1;
    }
     elif (current == 3) {
        state = 2;
        traffic_a.val = 2;
    }
     elif (current == 4) {
        state = 3;
        traffic_a.val = 3;
    }
    trace("-----------", );
    trace("state on A is {}", state);
}

proc src ()
    bus src_out {val: u5 range 1 to 1;};
{
    src_out.val = 1;
}

proc traffic_B (in traffic_a)
    var state: u5 = 0 range 0 to 4;
    bus traffic_b {val: u5 range 1 to 4;};
    var current: u5 range 1 to 4;
{
    current = traffic_a.val;
    if (current == 1) {
        state = 3;
        traffic_b.val = 3;
    } elif (current == 2) {
         state = 4;
         traffic_b.val = 4;
    }
     elif (current == 3) {
        state = 1;
        traffic_b.val = 1;
    }
     elif (current == 4) {
        state = 2;
        traffic_b.val = 2;
    }
    trace("state on B is {}", state);
    trace("-----------", );
}

network traffic_light ()
{
    instance a of traffic_A(s.src_out, b.traffic_b);
    instance b of traffic_B(a.traffic_a);
    instance s of src();
}
