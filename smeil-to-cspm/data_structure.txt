%%%% Before transformation %%%%

data = {
    network : [
        % Every element in the network is a process
        {
            proc_name: x, % Must be unique %
            instance_name: x, % Must be unique %
            instance_input: x,
         }
    ],
    channels : {
        real_proc_name : {
            real_bus_name: [
                {
                    channel_name: x,
                    lowerbound: x,
                    upperbound: x,
                    type: x,
                }
            ]
        }
    },
    processes : [
        {
            proc_name: x,
            input_variable: x,
            calculations_list: [
                x
            ],
            communication_list: [
                (communication, value_to_send)
            ]
        }
    ]
}

%%%% After transformation %%%%


data = {
    network :
    {
        proc_name:
        {
            proc_name: x, % Must be unique %
            instance_name: x, % Must be unique %
            instance_input: x, % tranformed to correct channel name
            synchronization: [
                (channel_name, monitor_procces_name),
            ]
        },
        instance_name:
        {
            proc_name: x, % Must be unique %
            instance_name: x, % Must be unique %
            instance_input: x, % tranformed to correct channel name
            synchronization: [
                (channel_name, monitor_procces_name),
            ]
        }
    },
    channels : {
        % Must include input channels
        channel_name : (lowerbound, upperbound)
    }
    monitor : {
        monitor_procces_name : (monitor_lowerbound, monitor_upperbound)
    },

    #Not sure if I need this
    channels_monitor:  {
        channel_name : monitor_procces_name
    },




    processes :
    [
        {
            proc_name: x,
            input_variable: x,
            calculations: [
                x
            ],
            communication_list: [
                (channel_name, value_to_send)
            ]
        }
    ]
}
